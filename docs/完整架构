## 整体架构图： （多表唯一标识-模块ID  <光模块厂商>-<数据中心>-<机房/Pod>-<机柜>-<交换机hostname>-<interface>-<speed> 例如CISCO-DC1-Pod01-Rack01-SW01-Eth1/1-100G）

采集层
├── SNMP Polling（5分钟）
├── gRPC 推送（1分钟）
├── Syslog Collector（如 FluentBit）

↓
队列层（解耦、缓存、异步）
├── Kafka（指标 / 日志）
├── Redis Stream（告警/缓存）
├── Celery / RabbitMQ（任务队列）

↓
清洗层（结构化 + 模块 ID）
├── PySpark 批清洗（大批量）
├── Spark Streaming / Flink（实时）

↓
存储层
存储层
├── 表名：grpc_interface_metrics（InfluxDB）（用途：采集 gRPC 实时指标数据，1分钟粒度，用于性能监控与趋势预测）
├── 表名：snmp_interface_status（TimescaleDB）（用途：采集 SNMP 接口状态、广播风暴、链路异常、MAC统计等信息）
├── 索引名：syslog-events（Elasticsearch）（用途：结构化存储网络设备 syslog 日志，用于协议事件、链路故障、状态变更分析）
├── 表名：lldp_neighbors（TimescaleDB）（用途：存储 LLDP 邻居发现信息，用于自动拓扑分析）
├── 表名：module_ddm_metrics（Parquet）（用途：光模块历史 DDM 指标，供模型训练与趋势分析）
├── 表名：prediction_result（Parquet）（用途：记录 AI 模型对光模块的预测结果和命中规则）

↓
分析层（算法模型）
├── ARIMA / Prophet / LSTM（趋势预测）
├── IsolationForest / 规则引擎（异常检测）
├── 健康评分模块（根据指标历史打分）

↓
Redis 缓存层 ✅
├── 接口状态缓存（如 Ethernet56）
├── 健康评分缓存（模块健康度）
├── 告警消息发布订阅
├── LLM 对话上下文缓存

↓
RAG 增强层 ✅
├─ 文档 + 日志 + 指标 + 配置
   ├─ 检索历史数据（向量召回，向量DB如 FAISS）
   ├─ 构建 prompt（结合语义上下文 + 配置 + 异常）
   ├─ 调用 LLM（本地模型或 API，如 ChatGLM / Claude）

↓
服务模板层 ✅（封装 API 服务）
├── dashboard_service.py（仪表盘统计服务）
├── device_service.py（设备详情与面板服务）
├── module_service.py（光模块监控与详情服务）
├── predict_service.py（模块预测服务）
├── statistics_service.py（数据统计页面服务）
├── config_service.py（配置管理服务）
├── llm_service.py（智能问答服务）
├── auth_service.py（认证服务）
├── auth_service.py（认证服务）
├── settings_service.py（系统设置服务）
├── alert_service.py（告警管理服务）

↓
FastAPI 控制器层
├── 对外统一 API（供前端调用）
├── 接入权限控制、认证、日志追踪

↓
前端展示层
├── 自研前端（状态面板 + 健康总览）
